{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.type\";\nimport { signInSuccess, signInFailuer, signOutSuccess, signOutStart, signOutFailuer } from \"./user-action\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utli\";\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess);\n  } catch (error) {\n    yield put(signOutFailuer(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapShot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapShot.id,\n      ...userSnapShot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailuer(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailuer(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailuer(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailuer);\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["F:/final project/crown-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","signInSuccess","signInFailuer","signOutSuccess","signOutStart","signOutFailuer","auth","googleProvider","createUserProfileDocument","getCurrentUser","signOut","error","getSnapshotFromUserAuth","userAuth","userRef","userSnapShot","get","id","data","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onEmailSignInStart","EMAIL_SIGN_IN_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,cALF,QAMO,eANP;AAOA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,EAIEC,cAJF,QAKO,8BALP;AAOA,OAAO,UAAUC,OAAV,GAAoB;AACzB,MAAI;AACF,UAAMJ,IAAI,CAACI,OAAL,EAAN;AACA,UAAMb,GAAG,CAACM,cAAD,CAAT;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACd,UAAMd,GAAG,CAACQ,cAAc,CAACM,KAAD,CAAf,CAAT;AACD;AACF;AACD,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMhB,IAAI,CAACU,yBAAD,EAA4BK,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CAACI,aAAa,CAAC;AAAEgB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOP,KAAP,EAAc;AACd,UAAMd,GAAG,CAACK,aAAa,CAACS,KAAD,CAAd,CAAT;AACD;AACF;AACD,OAAO,UAAUQ,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACe,eAAL,CAAqBd,cAArB,CAAvB;AACA,UAAMK,uBAAuB,CAACQ,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOT,KAAP,EAAc;AACd,UAAMd,GAAG,CAACK,aAAa,CAACS,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUW,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMb,uBAAuB,CAACQ,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOT,KAAP,EAAc;AACd,UAAMd,GAAG,CAACK,aAAa,CAACS,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUgB,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMd,QAAQ,GAAG,MAAMJ,cAAc,EAArC;AACA,QAAI,CAACI,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACD,GAJD,CAIE,OAAOF,KAAP,EAAc;AACd,UAAMd,GAAG,CAACK,aAAD,CAAT;AACD;AACF;AAED,OAAO,UAAU0B,kBAAV,GAA+B;AACpC,QAAMhC,UAAU,CAACI,eAAe,CAAC6B,mBAAjB,EAAsCP,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUQ,mBAAV,GAAgC;AACrC,QAAMlC,UAAU,CAACI,eAAe,CAAC+B,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUa,kBAAV,GAA+B;AACpC,QAAMpC,UAAU,CAACI,eAAe,CAACiC,kBAAjB,EAAqCN,mBAArC,CAAhB;AACD;AACD,OAAO,UAAUO,cAAV,GAA2B;AAChC,QAAMtC,UAAU,CAACI,eAAe,CAACmC,cAAjB,EAAiCzB,OAAjC,CAAhB;AACD;AAED,OAAO,UAAU0B,SAAV,GAAsB;AAC3B,QAAMrC,GAAG,CAAC,CACRD,IAAI,CAACgC,mBAAD,CADI,EAERhC,IAAI,CAAC8B,kBAAD,CAFI,EAGR9B,IAAI,CAACkC,kBAAD,CAHI,EAIRlC,IAAI,CAACoC,cAAD,CAJI,CAAD,CAAT;AAMD","sourcesContent":["import { takeLatest, put, call, all } from \"redux-saga/effects\";\r\nimport UserActionTypes from \"./user.type\";\r\nimport {\r\n  signInSuccess,\r\n  signInFailuer,\r\n  signOutSuccess,\r\n  signOutStart,\r\n  signOutFailuer\r\n} from \"./user-action\";\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser\r\n} from \"../../firebase/firebase.utli\";\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess);\r\n  } catch (error) {\r\n    yield put(signOutFailuer(error));\r\n  }\r\n}\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapShot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapShot.id, ...userSnapShot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFailuer(error));\r\n  }\r\n}\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailuer(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFailuer(error));\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (error) {\r\n    yield put(signInFailuer);\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}