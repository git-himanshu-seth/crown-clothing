{"ast":null,"code":"var _jsxFileName = \"F:\\\\final project\\\\crown-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignUpContainer, SignUpTitle } from './sign-up.style';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user-action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [additonalData, setAdditionData] = userState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  consthandleSubmit = async event => {\n    event.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = additonalData;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      additonalData,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignUpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignUpTitle, {\n      children: \"I do not have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SignUp;\n\nconst mapDispatchToprops = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToprops)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["F:/final project/crown-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","SignUpContainer","SignUpTitle","connect","signUpStart","SignUp","additonalData","setAdditionData","userState","displayName","email","password","confirmPassword","consthandleSubmit","event","preventDefault","alert","handleChange","name","value","target","setState","handleSubmit","mapDispatchToprops","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport FormInput from'../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport{ SignUpContainer, SignUpTitle } from'./sign-up.style';\r\n\r\nimport {connect }from 'react-redux'\r\nimport { signUpStart} from '../../redux/user/user-action'\r\nconst SignUp=({signUpStart})=>{\r\n  const [additonalData ,setAdditionData]=userState({displayName: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: ''}) \r\n  \r\n    consthandleSubmit = async event => {\r\n      event.preventDefault();\r\n\r\n      const { displayName, email, password, confirmPassword } = additonalData;\r\n  \r\n      if (password !== confirmPassword) {\r\n        alert(\"passwords don't match\");\r\n        return;\r\n      }\r\n  signUpStart({displayName,email,password})\r\n     \r\n    };\r\n  \r\n    handleChange = event => {\r\n      const { name, value } = event.target;\r\n  \r\n      this.setState({additonalData, [name]: value });\r\n    };\r\n      return (\r\n        <SignUpContainer>\r\n          <SignUpTitle>I do not have a account</SignUpTitle>\r\n          <span>Sign up with your email and password</span>\r\n          <form className='sign-up-form' onSubmit={handleSubmit}>\r\n            <FormInput\r\n              type='text'\r\n              name='displayName'\r\n              value={displayName}\r\n              onChange={handleChange}\r\n              label='Display Name'\r\n              required\r\n            />\r\n            <FormInput\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              onChange={handleChange}\r\n              label='Email'\r\n              required\r\n            />\r\n            <FormInput\r\n              type='password'\r\n              name='password'\r\n              value={password}\r\n              onChange={handleChange}\r\n              label='Password'\r\n              required\r\n            />\r\n            <FormInput\r\n              type='password'\r\n              name='confirmPassword'\r\n              value={confirmPassword}\r\n              onChange={handleChange}\r\n              label='Confirm Password'\r\n              required\r\n            />\r\n            <CustomButton type='submit'>SIGN UP</CustomButton>\r\n          </form>\r\n        </SignUpContainer>\r\n      );\r\n    }\r\n\r\n  const mapDispatchToprops=dispatch=>({\r\nsignUpStart:userCredentials=>dispatch(signUpStart(userCredentials))\r\n  })\r\n  export default connect(null, mapDispatchToprops)(SignUp);"]},"metadata":{},"sourceType":"module"}