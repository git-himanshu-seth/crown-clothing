{"ast":null,"code":"var _jsxFileName = \"F:\\\\final project\\\\crown-clothing\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.style';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-action';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n      children: \"I Have Already An ACcount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign In With Your Email And Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        handleChange: handleChange,\n        value: email,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        handleChange: handleChange,\n        value: password,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          onSubmit: handleSubmit,\n          children: \"SIGN IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"SIGN IN WITH GOOGLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"/KzDV2a4VBIN9mBO66Hu8uUp+58=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["F:/final project/crown-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","SignInContainer","SignInTitle","ButtonsBarContainer","googleSignInStart","emailSignInStart","FormInput","CustomButton","SignIn","userCredentials","setUserCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React ,{useState}from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    SignInContainer,\r\n    SignInTitle,\r\n    ButtonsBarContainer\r\n} from './sign-in.style';\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-action'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n\r\n\r\nconst SignIn =({emailSignInStart, googleSignInStart})=> {\r\n    const [userCredentials,setUserCredentials]=useState({email:'',password:''});\r\n    const { email, password } = userCredentials;\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        \r\n       \r\n        emailSignInStart(email, password)\r\n\r\n    }\r\n\r\n\r\n   const handleChange = (event) => {\r\n        const { value, name, } = event.target;\r\n        setUserCredentials({ ...userCredentials,[name]: value })\r\n\r\n    }\r\n\r\n    \r\n        return (\r\n            <SignInContainer>\r\n                <SignInTitle>I Have Already An ACcount</SignInTitle>\r\n                <span >Sign In With Your Email And Password</span>\r\n                <form onSubmit={handleSubmit} >\r\n                    <FormInput type='email' name='email' handleChange={handleChange} value={email} label='email' required />\r\n                    {/* <label> Email</label> */}\r\n\r\n                    <FormInput type='password' name='password' handleChange={handleChange} value={password} label=\"password\" required />\r\n                    {/* <label> Password</label> */}\r\n                    <ButtonsBarContainer>\r\n                        <CustomButton type='submit' onSubmit={handleSubmit}>\r\n                            SIGN IN\r\n    </CustomButton>\r\n\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n                            SIGN IN WITH GOOGLE\r\n    </CustomButton>\r\n\r\n                    </ButtonsBarContainer>\r\n\r\n                </form>\r\n            </SignInContainer>\r\n        )\r\n    }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}