{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utli\";\nexport const featchingCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailur = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILUER,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(featchingCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(featchingCollectionsStart(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailur(error.message)));\n  };\n};","map":{"version":3,"sources":["F:/final project/crown-clothing/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","featchingCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailur","errorMessage","FETCH_COLLECTIONS_FAILUER","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,8BAHP;AAIA,OAAO,MAAMC,yBAAyB,GAAG,OAAO;AAC9CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADwB,CAAP,CAAlC;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,sBAAsB,GAAIC,YAAD,KAAmB;AACvDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADiC;AAEvDH,EAAAA,OAAO,EAAEE;AAF8C,CAAnB,CAA/B;AAIP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,yBAAyB,EAA1B,CAAR;AACAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AAEAL,MAAAA,QAAQ,CAACX,yBAAyB,CAACI,cAAD,CAA1B,CAAR;AACD,KANH,EAOGa,KAPH,CAOUC,KAAD,IAAWP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAP5B;AAQD,GAXD;AAYD,CAbM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from \"../../firebase/firebase.utli\";\r\nexport const featchingCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailur = (errorMessage) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILUER,\r\n  payload: errorMessage\r\n});\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    dispatch(featchingCollectionsStart());\r\n    collectionRef\r\n      .get()\r\n      .then((snapshot) => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\r\n        dispatch(featchingCollectionsStart(collectionsMap));\r\n      })\r\n      .catch((error) => dispatch(fetchCollectionsFailur(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}