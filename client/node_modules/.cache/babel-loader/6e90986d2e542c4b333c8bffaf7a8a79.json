{"ast":null,"code":"var _jsxFileName = \"F:\\\\final project\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom'; // import {withRouter} from 'react-router-dom'\n\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utli';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.action';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CollectionPagewWithSpinner = () => {\n  WithSpinner(CollectionPage);\n};\n\n_c = CollectionPagewWithSpinner;\n\nconst CollectionOverviewWithSpinner = () => {\n  WithSpinner(CollectionOverview);\n};\n\n_c2 = CollectionOverviewWithSpinner;\n\nclass ShopComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubuscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubuscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionPagewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionOverviewWithSpinner\");","map":{"version":3,"sources":["F:/final project/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","WithSpinner","CollectionPagewWithSpinner","CollectionOverviewWithSpinner","ShopComponent","Component","unsubuscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA0B,oCAA1B;AACA,SAAQC,SAAR,EAAoBC,+BAApB,QAA0D,8BAA1D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAiC,8BAAjC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;;AAGA,MAAMC,0BAA0B,GAAC,MAAI;AAACD,EAAAA,WAAW,CAACL,cAAD,CAAX;AAA4B,CAAlE;;KAAMM,0B;;AAEN,MAAMC,6BAA6B,GAAC,MAAI;AAACF,EAAAA,WAAW,CAACN,kBAAD,CAAX;AAAgC,CAAzE;;MAAMQ,6B;;AACN,MAAMC,aAAN,SAA4BX,KAAK,CAACY,SAAlC,CAA2C;AAAA;AAAA;AAAA,SAG3CC,wBAH2C,GAGlB,IAHkB;AAAA;;AAI3CC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACP,MAAAA;AAAD,QAAoB,KAAKQ,KAA/B;AACA,UAAMC,aAAa,GAACZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAApB;AACA,SAAKJ,wBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAgB;AAAC,YAAMC,aAAa,GAAEf,+BAA+B,CAACc,QAAD,CAApD;AACzEZ,MAAAA,iBAAiB,CAACa,aAAD,CAAjB;AAAiC,KADF,CAA/B;AAED;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKP,KAAnB;AACC,wBACS;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAErB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEoB,KAAK,CAACC,IAAK,gBAAjC;AAAkD,QAAA,SAAS,EAAEpB;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADT;AAMO;;AAnBiC;;AAmBhC;;AACT,MAAMqB,kBAAkB,GAACC,QAAQ,KAAG;AAClClB,EAAAA,iBAAiB,EAAEa,aAAa,IAAEK,QAAQ,CAAElB,iBAAiB,CAACa,aAAD,CAAnB;AADR,CAAH,CAAjC;;AAGF,eAAed,OAAO,CAAC,IAAD,EAAMkB,kBAAN,CAAP,CAAiCb,aAAjC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom'\r\n// import {withRouter} from 'react-router-dom'\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component'\r\nimport CollectionPage from'../collection/collection.component'\r\nimport {firestore , convertCollectionsSnapshotToMap} from '../../firebase/firebase.utli'\r\nimport {connect} from 'react-redux'\r\nimport  {updateCollections} from '../../redux/shop/shop.action'\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\r\n\r\n\r\nconst CollectionPagewWithSpinner=()=>{WithSpinner(CollectionPage)}\r\n\r\nconst CollectionOverviewWithSpinner=()=>{WithSpinner(CollectionOverview)}\r\nclass ShopComponent extends React.Component{\r\n\r\n\r\nunsubuscribeFromSnapshot=null\r\ncomponentDidMount(){\r\n  const {updateCollections}=this.props\r\n  const collectionRef=firestore.collection('collections');\r\n  this.unsubuscribeFromSnapshot= collectionRef.onSnapshot(async snapshot=>{const collectionMap= convertCollectionsSnapshotToMap(snapshot)\r\n  updateCollections(collectionMap)})\r\n}\r\n\r\nrender(){\r\n  const {match}=this.props\r\n   return(\r\n            <div className='shop-page'>\r\n              <Route exact path={`${match.path}`} component={CollectionOverview}/>\r\n              <Route exact path={`${match.path}/:collectionId`} component={CollectionPage}/>\r\n      \r\n            </div>\r\n        )}};        \r\n  const mapDispatchToProps=dispatch=>({\r\n    updateCollections :collectionMap=>dispatch( updateCollections(collectionMap))\r\n  })      \r\nexport default connect(null,mapDispatchToProps)(ShopComponent);"]},"metadata":{},"sourceType":"module"}