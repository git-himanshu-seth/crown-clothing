{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport rootSaga from \"./root-saga\";\nimport rootReducer from \"./root-reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\nconst persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);\nexport { store, persistor };","map":{"version":3,"sources":["F:/final project/crown-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootSaga","rootReducer","createSagaMiddleware","sagaMiddleware","middleware","process","env","NODE_ENV","push","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,MAAMC,cAAc,GAAGD,oBAAoB,EAA3C;AACA,MAAME,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,UAAU,CAACI,IAAX,CAAgBT,MAAhB;AACD;;AACD,MAAMU,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,UAAJ,CAA7B,CAAzB;AACA,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AACAN,cAAc,CAACQ,GAAf,CAAmBX,QAAnB;AAEA,SAASS,KAAT,EAAgBC,SAAhB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport logger from \"redux-logger\";\r\nimport rootSaga from \"./root-saga\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleware.push(logger);\r\n}\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\nconst persistor = persistStore(store);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}