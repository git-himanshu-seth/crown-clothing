{"ast":null,"code":"var _jsxFileName = \"F:\\\\final project\\\\crown-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.style';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-action';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n        children: \"I Have Already An ACcount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign In With Your Email And Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          handleChange: this.handleChange,\n          value: this.state.email,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          handleChange: this.handleChange,\n          value: this.state.password,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            onSubmit: this.handleSubmit,\n            children: \"SIGN IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"SIGN IN WITH GOOGLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["F:/final project/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","SignInContainer","SignInTitle","ButtonsBarContainer","googleSignInStart","emailSignInStart","FormInput","CustomButton","SignIn","Component","constructor","props","handleSubmit","event","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    SignInContainer,\r\n    SignInTitle,\r\n    ButtonsBarContainer\r\n} from './sign-in.style';\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-action'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n    handleSubmit = async event => {\r\n        const { emailSignInStart } = this.props;\r\n        const { email, password } = this.state;\r\n        emailSignInStart(email, password);\r\n\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const { value, name, } = event.target;\r\n        this.setState({ [name]: value })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { googleSignInStart } = this.props;\r\n        return (\r\n            <SignInContainer>\r\n                <SignInTitle>I Have Already An ACcount</SignInTitle>\r\n                <span >Sign In With Your Email And Password</span>\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <FormInput type='email' name='email' handleChange={this.handleChange} value={this.state.email} label='email' required />\r\n                    {/* <label> Email</label> */}\r\n\r\n                    <FormInput type='password' name='password' handleChange={this.handleChange} value={this.state.password} label=\"password\" required />\r\n                    {/* <label> Password</label> */}\r\n                    <ButtonsBarContainer>\r\n                        <CustomButton type='submit' onSubmit={this.handleSubmit}>\r\n                            SIGN IN\r\n    </CustomButton>\r\n\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n                            SIGN IN WITH GOOGLE\r\n    </CustomButton>\r\n\r\n                    </ButtonsBarContainer>\r\n\r\n                </form>\r\n            </SignInContainer>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}