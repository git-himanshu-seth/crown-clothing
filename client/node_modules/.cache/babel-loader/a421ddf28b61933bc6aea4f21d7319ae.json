{"ast":null,"code":"var _jsxFileName = \"F:\\\\final project\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.action';\nimport { selectIsCollectionFetching, isCollectionLoaded } from '../../redux/shop/shop.selector';\nimport { createStructuredSelector } from 'reselect';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionPagewWithSpinner = WithSpinner(CollectionPage);\n_c = CollectionPagewWithSpinner;\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n_c2 = CollectionOverviewWithSpinner;\n\nclass ShopComponent extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPagewWithSpinner, {\n          isLoading: isLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isLoaded: isCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionPagewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionOverviewWithSpinner\");","map":{"version":3,"sources":["F:/final project/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionOverview","CollectionPage","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","isCollectionLoaded","createStructuredSelector","WithSpinner","CollectionPagewWithSpinner","CollectionOverviewWithSpinner","ShopComponent","Component","componentDidMount","props","render","match","isCollectionFetching","isLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA0B,oCAA1B;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,0BAAT,QAA0C,8BAA1C;AACA,SAAQC,0BAAR,EAAqCC,kBAArC,QAA8D,gCAA9D;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAGA,MAAMC,0BAA0B,GAAED,WAAW,CAACN,cAAD,CAA7C;KAAMO,0B;AAEN,MAAMC,6BAA6B,GAAEF,WAAW,CAACP,kBAAD,CAAhD;MAAMS,6B;;AACN,MAAMC,aAAN,SAA4BZ,KAAK,CAACa,SAAlC,CAA2C;AAE1CC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACT,MAAAA;AAAD,QAA6B,KAAKU,KAAxC;AACAV,IAAAA,0BAA0B;AAC3B;;AAEFW,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,oBAAR;AAA8BC,MAAAA;AAA9B,QAAwC,KAAKJ,KAAnD;AAEC,wBACS;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGL,KAAD,iBAAS,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEG,oBAA1C;AAAA,aAAoEH;AAApE;AAAA;AAAA;AAAA;AAAA;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAAjC;AAAkD,QAAA,MAAM,EAAIL,KAAD,iBAAS,QAAC,0BAAD;AAA4B,UAAA,SAAS,EAAEI,QAAvC;AAAA,aAAqDJ;AAArD;AAAA;AAAA;AAAA;AAAA;AAApE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADT;AAMO;;AAhBiC;;AAgBhC;AAET,MAAMM,eAAe,GAAGb,wBAAwB,CAAC;AAC/CU,EAAAA,oBAAoB,EAAGZ,0BADwB;AAE/Ca,EAAAA,QAAQ,EAAEZ;AAFqC,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAACC,QAAQ,KAAG;AACpClB,EAAAA,0BAA0B,EAAC,MAAIkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADH,CAAH,CAAjC;;AAGF,eAAeD,OAAO,CAACiB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CV,aAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom'\r\n\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component'\r\nimport CollectionPage from'../collection/collection.component'\r\n\r\nimport {connect} from 'react-redux'\r\nimport  {fetchCollectionsStartAsync} from '../../redux/shop/shop.action'\r\nimport {selectIsCollectionFetching , isCollectionLoaded} from '../../redux/shop/shop.selector'\r\nimport {createStructuredSelector} from 'reselect'\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\r\n\r\n\r\nconst CollectionPagewWithSpinner= WithSpinner(CollectionPage)\r\n\r\nconst CollectionOverviewWithSpinner= WithSpinner(CollectionOverview)\r\nclass ShopComponent extends React.Component{\r\n\r\n componentDidMount(){\r\n   const {fetchCollectionsStartAsync}=this.props;\r\n   fetchCollectionsStartAsync()\r\n }\r\n\r\nrender(){\r\n  const {match, isCollectionFetching ,isLoaded}=this.props\r\n \r\n   return(\r\n            <div className='shop-page'>\r\n              <Route exact path={`${match.path}`} render={(props)=><CollectionOverviewWithSpinner isLoading={isCollectionFetching} {...props}/>}/>\r\n              <Route exact path={`${match.path}/:collectionId`} render={ (props)=><CollectionPagewWithSpinner isLoading={isLoaded} {...props}/>}/>\r\n      \r\n            </div>\r\n        )}};       \r\n        \r\n  const mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching : selectIsCollectionFetching,\r\n    isLoaded: isCollectionLoaded\r\n  })      \r\n  const mapDispatchToProps=dispatch=>({\r\n  fetchCollectionsStartAsync:()=>dispatch(fetchCollectionsStartAsync())  \r\n  })      \r\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopComponent);"]},"metadata":{},"sourceType":"module"}