{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemsToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemsToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemsToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemsToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartitem => cartItem.id !== cartItemToRemove.id);\n  } else {\n    return cartItems = existingCartItem.quantity - 1;\n  }\n};","map":{"version":3,"sources":["F:/final project/crown-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemsToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter","cartitem"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,cAAZ,KAA+B;AAC1D,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,cAAc,CAACI,EADtB,CAAzB;;AAGA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,cAAc,CAACI,EAA/B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,cAAL;AAAqBM,IAAAA,QAAQ,EAAE;AAA/B,GAAf,CAAP;AACD,CAbM;AAeP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AACjE,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADxB,CAAzB;;AAIA,MAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAqC;AACnC,WAAOP,SAAS,CAACU,MAAV,CAAkBC,QAAD,IAAcP,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAhE,CAAP;AACD,GAFD,MAEO;AACL,WAAQL,SAAS,GAAGE,gBAAgB,CAACK,QAAjB,GAA4B,CAAhD;AACD;AACF,CAVM","sourcesContent":["export const addItemToCart = (cartItems, cartItemsToAdd) => {\r\n  const existingCartItem = cartItems.find(\r\n    (cartItem) => cartItem.id === cartItemsToAdd.id\r\n  );\r\n  if (existingCartItem) {\r\n    return cartItems.map((cartItem) =>\r\n      cartItem.id === cartItemsToAdd.id\r\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n        : cartItem\r\n    );\r\n  }\r\n\r\n  return [...cartItems, { ...cartItemsToAdd, quantity: 1 }];\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n  const existingCartItem = cartItems.find(\r\n    (cartItem) => cartItem.id === cartItemToRemove.id\r\n  );\r\n\r\n  if (existingCartItem.quantity === 1) {\r\n    return cartItems.filter((cartitem) => cartItem.id !== cartItemToRemove.id);\r\n  } else {\r\n    return (cartItems = existingCartItem.quantity - 1);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}